const 
GPIO_INPUT          : byte = 0;
GPIO_OUTPUT         : byte = 1;

//----------------------------------------------------------------------------------------------------------------- SPI

type T_SPI_init			= procedure(mode : byte; fcy_div : byte; clock_and_edge : byte);
type T_SPI_write        = procedure(data_ : byte);
type T_SPI_read         = function(buffer : byte) : byte;

//----------------------------------------------------------------------------------------------------------------- I2C

type T_I2C_init			= procedure(clock : dword);
type T_I2C_start        = function() : char;
type T_I2C_stop         = procedure();
type T_I2C_restart      = procedure();  										// DUMMY
type T_I2C_write        = procedure(data_ : byte);
type T_I2C_read         = function(ack : byte) : byte;

//---------------------------------------------------------------------------------------------------------------- UART

type T_UART_init		= procedure(baud_rate : dword; parity : byte; stop_bits : byte);
type T_UART_write       = procedure(data_ : byte );
type T_UART_read        = function() : byte;
type T_UART_ready       = function() : byte;
